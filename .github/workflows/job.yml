name: Workflow
on:
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Haskell Release Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-musl

      - name: Use cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "workflow"

      - name: Haskell Release Build
        run: cargo build --release --target=x86_64-unknown-linux-musl --features haskell

  test:
    name: Haskell Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install GHC for runtime
        uses: haskell-actions/setup@v2
        with:
          ghc-version: '9.8.2'

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-musl

      - name: Use cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "workflow"

      - name: Run test cases
        run: cargo test --target=x86_64-unknown-linux-musl --features haskell

  format:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Use cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "workflow"

      - name: Run formatter
        run: cargo fmt --all --check

  clippy:
    name: Haskell Clippy Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Use cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "workflow"

      - name: Run clippy linter
        run: cargo clippy --features haskell --tests -- -W clippy::all

  docker:
    name: Haskell Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Build docker image
        run: docker build -t mozart . -f docker/haskell
